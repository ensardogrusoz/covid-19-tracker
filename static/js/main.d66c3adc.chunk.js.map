{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","Grid","container","spaceing","justify","item","component","Card","xs","md","className","cx","styles","text","infected","CardContent","Typography","color","gutterBottom","varient","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","map","positive","death","date","dateChecked","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","fetchAPI","lineChart","length","labels","toLocaleDateString","datasets","label","borderColor","fill","backgroundColor","barChart","options","ledgend","display","title","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d66c3adc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './Cards.module.css';\n\nconst Cards= ( {data: { confirmed, recovered, deaths, lastUpdate }}) => {\n    if(!confirmed){\n        return 'Loding...';\n    }\n\n    return(\n    <div>\n        <Grid container spaceing={3} justify=\"center\">\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.text, styles.infected)}>\n                <CardContent>\n                    <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n                    <Typography varient=\"h5\">\n                        <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\n                    </Typography>\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                    <Typography varient=\"body2\">Number of active cases of Covid-19</Typography>\n                </CardContent>\n            </Grid>\n\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.text, styles.recovered)}>\n                <CardContent>\n                    <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\n                    <Typography varient=\"h5\">\n                    <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\n                    </Typography>\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                    <Typography varient=\"body2\">Number of recoveries from Covid-19</Typography>\n                </CardContent>\n            </Grid>\n\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.text, styles.deaths)}>\n                <CardContent>\n                    <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\n                    <Typography varient=\"h5\">\n                    <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\n                    </Typography>\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                    <Typography varient=\"body2\">Number of deaths caused by Covid-19</Typography>\n                </CardContent>\n            </Grid>\n        </Grid>\n        \n    </div>\n    )\n}\n\nexport default Cards;","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n    let changeableUrl = url;\n\n    if(country){\n        changeableUrl = `${url}/countries/${country}`;\n    }\n    \n    try {\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n        \n        return { confirmed, recovered, deaths, lastUpdate }\n    } catch (error) {\n        return error;\n    }\n}\n\nexport const fetchDailyData = async () => {\n    try {\n      const { data } = await axios.get('https://api.covidtracking.com/v1/us/daily.json');\n\n      return data.map(({ positive, recovered, death, dateChecked: date }) => ({ confirmed: positive, recovered, deaths: death, date }));\n    } catch (error) {\n      return error;\n    }\n  };\n\n  export const fetchCountries = async () =>{\n      try {\n          const {data: { countries }} = await axios.get(`${url}/countries`);\n\n          return countries.map((country) => country.name)\n      } catch (error) {\n          return error;\n          \n      }\n  };","import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({data: {confirmed, recovered, deaths}, country}) => {\n    const [dailyData, setDailyData]= useState([]);\n\n    useEffect(()=>{\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n        }\n        // console.log(dailyData)\n        fetchAPI();\n    }, []);\n\n    const lineChart =(\n        dailyData.length\n        ?(\n        <Line\n            data={{\n                labels: dailyData.map(({ date }) => new Date(date).toLocaleDateString()),\n                datasets: [{\n                    data: dailyData.map(({confirmed}) => confirmed),\n                    label: 'Infected',\n                    borderColor: '#3333ff',\n                    fill: true,\n                },{\n                    data: dailyData.map(({deaths}) => deaths),\n                    label: 'Deaths',\n                    borderColor: 'red',\n                    backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                    fill: true,\n                },{\n                    data: dailyData.map((data) => data.recovered),\n                    label: 'Recovered',\n                    borderColor: 'green',\n                    backgroundColor: 'rgba(0, 255, 0, 0.5)',\n                    fill: true,\n                },\n                ],\n            }}\n        />) : null\n    );\n\n    const barChart =(\n        confirmed\n        ?(\n            <Bar\n                data={{\n                    labels: ['Infected', 'Recovered', 'Deaths'],\n                    datasets: [{\n                        label: 'People',\n                        backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n                        data: [confirmed.value, recovered.value, deaths.value],\n                    }]\n\n                }}\n                options={{\n                    ledgend: {display: false},\n                    title: { display: true, text: `Current state in ${country}`}\n                }}\n            />\n        ) : null\n    )\n    return(\n\n        <div className={styles.container}>\n            {country ? barChart : lineChart}\n        </div>\n    )\n}\n\nexport default Chart;","import React, { useState, useEffect }from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core'\nimport styles from './CountryPicker.module.css';\nimport {fetchCountries} from '../../api';\n\nconst CountryPicker = ({handleCountryChange}) => {\n    const [fetchedCountries, setFetchedCountries] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setFetchedCountries(await fetchCountries())\n        }\n\n        fetchAPI();\n    },[setFetchedCountries])\n\n    // console.log(fetchedCountries)\n\n    return(\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n                <option value =\"\">United States</option>\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker;","import React from 'react';\n\nimport { Cards, Chart, CountryPicker } from './components';\nimport styles from './App.module.css';\nimport { fetchData } from './api'\n\nimport coronaImage from './images/image.png'\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: '',\n  }\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n\n    this.setState({ data: fetchedData })\n  }\n\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country);\n\n    this.setState({ data: fetchedData, country: country })\n  }\n\n  render(){\n  const { data , country} = this.state\n\n  return (\n    <div className={styles.container}>\n    <img className={styles.image} src={coronaImage}/>\n    <Cards data={data}/>\n    <CountryPicker handleCountryChange={this.handleCountryChange} />\n    <Chart data={data} country={country} />\n    </div>\n  );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}